version: 0.2

phases:
  install:
    commands:
      - aws --version
      - curl "https://awscli.amazonaws.com/awscli-exe-linux-aarch64.zip" -o "awscliv2.zip"
      - unzip -q awscliv2.zip
      - sudo ./aws/install --update
      - aws --version
  pre_build:
    commands:
      - AWS_ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
      - REPOSITORY_URI=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/hello-vercel-ai
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=${COMMIT_HASH:=latest}
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...
      - docker build -t $REPOSITORY_URI:latest .
      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker images...
      - docker push $REPOSITORY_URI:latest
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - echo Deploying to Bedrock Agent Runtime...
      - echo Updating agent runtime with new container image...
      - |
        aws bedrock-agentcore-control update-agent-runtime \
          --agent-runtime-id $AGENT_RUNTIME_ID \
          --agent-runtime-artifact containerConfiguration={containerUri=$REPOSITORY_URI:$IMAGE_TAG} \
          --role-arn $AGENT_ROLE_ARN \
          --network-configuration networkMode=PUBLIC \
          --environment-variables PORT=8080
      - echo Agent runtime update initiated successfully
